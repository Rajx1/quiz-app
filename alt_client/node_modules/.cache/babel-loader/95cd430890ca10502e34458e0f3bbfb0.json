{"ast":null,"code":"var _jsxFileName = \"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport Context from \"../utils/Context\";\nimport data from '../sampleData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateQuiz() {\n  _s();\n\n  const {\n    setTriviaData\n  } = useContext(Context);\n  const [formData, setFormData] = useState({\n    amount: '',\n    category: '',\n    difficulty: ''\n  });\n  const [player, setPlayer] = useState('');\n  const [players, addPlayers] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  /*\n  async function getTriviaData() {\n     try {\n        const { data } = await axios.get(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`)\n        setTriviaData(data)\n        setError('')\n     } catch (err) {\n        setError(err.response.data.message || err.message)\n     }\n  }*/\n\n  function submitPlayer(e) {\n    e.preventDefault();\n    addPlayers(state => [...state, player]);\n    setPlayer('');\n  }\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handlePlayer = e => {\n    const {\n      value\n    } = e.target;\n    setPlayer(value);\n  };\n\n  function submitForm(e) {\n    //getTriviaData()\n    e.preventDefault();\n    data = data.results;\n    let i = 0;\n    let counter = 0;\n\n    while (i <= data.length - players.length) {\n      counter++;\n\n      for (let k = 0; k < players.length; k++) {\n        data[i + k].player = {\n          name: players[k],\n          questionNo: counter\n        };\n      }\n\n      i += players.length;\n    }\n\n    data.amount = parseInt(formData.amount);\n    setTriviaData(data);\n    navigate(\"/questions_page\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w3-content w3-container w3-margin-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-card-4 w3-container w3-pale-blue\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create quiz - minimum 2 players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitPlayer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w3-margin-right\",\n          type: \"text\",\n          name: \"name\",\n          value: player,\n          placeholder: \"Enter player name\",\n          onChange: handlePlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w3-button w3-purple w3-round-xlarge\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this), players.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), players.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e\n      }, `player${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }, this))]\n    }, void 0, true), players.length > 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-margin-right\",\n        type: \"text\",\n        name: \"amount\",\n        value: formData.amount,\n        placeholder: \"Enter number of questions\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-margin-right\",\n        type: \"text\",\n        name: \"category\",\n        value: formData.category,\n        placeholder: \"Enter category\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-margin-right\",\n        type: \"text\",\n        name: \"difficulty\",\n        value: formData.difficulty,\n        placeholder: \"Enter difficulty\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w3-button w3-purple w3-round-xlarge\",\n        type: \"submit\",\n        value: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateQuiz, \"/CfCDd6oQ0KovGlEiZjFmHzqZnQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateQuiz;\nexport default CreateQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuiz\");","map":{"version":3,"sources":["/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js"],"names":["useState","useContext","useNavigate","axios","Context","data","CreateQuiz","setTriviaData","formData","setFormData","amount","category","difficulty","player","setPlayer","players","addPlayers","error","setError","navigate","submitPlayer","e","preventDefault","state","handleInput","name","value","target","handlePlayer","submitForm","results","i","counter","length","k","questionNo","parseInt","map"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'\nimport Context from \"../utils/Context\"\nimport data from '../sampleData.json'\n\nfunction CreateQuiz() {\n   const { setTriviaData } = useContext(Context)\n   const [formData, setFormData] = useState({ amount: '', category: '', difficulty: ''})\n   const [player, setPlayer] = useState('')\n   const [players, addPlayers] = useState([])\n   const [error, setError] = useState('')\n   const navigate = useNavigate();\n   /*\n   async function getTriviaData() {\n      try {\n         const { data } = await axios.get(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`)\n         setTriviaData(data)\n         setError('')\n      } catch (err) {\n         setError(err.response.data.message || err.message)\n      }\n   }*/\n\n   function submitPlayer(e) {\n      e.preventDefault()\n      addPlayers(state => [...state, player])\n      setPlayer('')\n   }\n\n   const handleInput = e => {\n      const { name, value } = e.target\n      setFormData({ ...formData, [name]: value })\n   }\n\n   const handlePlayer = e => {\n      const { value } = e.target\n      setPlayer(value)\n   }\n\n   function submitForm(e) {\n      //getTriviaData()\n      e.preventDefault()\n      data = data.results\n      let i = 0\n      let counter = 0\n      while(i <= data.length - players.length) {\n         counter++\n         for(let k = 0; k < players.length; k++) {\n            data[i+k].player = { name: players[k], questionNo: counter }\n         }\n         i += players.length\n      }\n      data.amount = parseInt(formData.amount)\n      setTriviaData(data)\n      navigate(\"/questions_page\");\n   }\n\n   return (\n      <div className=\"w3-content w3-container w3-margin-top\">\n         <div className=\"w3-card-4 w3-container w3-pale-blue\">\n            <h1>Create quiz - minimum 2 players</h1>\n            <form onSubmit={ submitPlayer }>\n               <input className='w3-margin-right' type=\"text\" name=\"name\" value={player} placeholder=\"Enter player name\" onChange={handlePlayer} />\n               <input className=\"w3-button w3-purple w3-round-xlarge\" type=\"submit\" value=\"Add\" />\n            </form>\n            <h3>{error}</h3>\n         </div>\n         { players.length > 0 &&\n               <>\n                  <h3>Players</h3>\n                  { players.map((e, i) => <li key={`player${i}`}>{e}</li>)}\n               </>\n         }\n         { players.length > 1 &&\n            <form onSubmit={ submitForm }>\n               <input className='w3-margin-right' type=\"text\" name=\"amount\" value={formData.amount} placeholder=\"Enter number of questions\" onChange={handleInput} />\n               <input className='w3-margin-right' type=\"text\" name=\"category\" value={formData.category} placeholder=\"Enter category\" onChange={handleInput} />\n               <input className='w3-margin-right' type=\"text\" name=\"difficulty\" value={formData.difficulty} placeholder=\"Enter difficulty\" onChange={handleInput} />\n               <input className=\"w3-button w3-purple w3-round-xlarge\" type=\"submit\" value=\"Start\" />\n            </form>\n         }\n      </div>\n   )\n}\n\nexport default CreateQuiz;"]},"metadata":{},"sourceType":"module"}