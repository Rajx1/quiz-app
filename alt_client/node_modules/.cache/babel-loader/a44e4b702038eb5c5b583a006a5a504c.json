{"ast":null,"code":"var _jsxFileName = \"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport Context from \"../utils/Context\";\nimport data from '../sampleData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateQuiz() {\n  _s();\n\n  const {\n    triviaData,\n    setTriviaData\n  } = useContext(Context);\n  /*\n  const [ amount, setAmount] = useState('')\n  const [category, setCategory] = useState('')\n  const [difficulty, setDifficulty] = useState('')*/\n\n  const [player, setPlayer] = useState('');\n  const [players, addPlayers] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  /*\n     async function getTriviaData() {\n        try {\n           const { data } = await axios.get(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`)\n           setTriviaData(data)\n           setError('')\n        } catch (err) {\n           setError(err.response.data.message || err.message)\n        }\n     }*/\n\n  function submitForm(event) {\n    event.preventDefault();\n    addPlayers(state => [...state, player]);\n    console.log(players);\n    setPlayer('');\n  }\n\n  function handleChange(event) {\n    const {\n      value\n    } = event.target;\n    setPlayer(value);\n  }\n\n  function handleStart() {//getTriviaData()\n    //navigate(\"/questions_page\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w3-content w3-container w3-margin-top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-card-4 w3-container w3-pale-blue\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create quiz - minimum 2 players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter player name\",\n          onChange: handleChange,\n          className: \"w3-margin-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w3-button w3-purple w3-round-xlarge\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        disabled: players.length < 1,\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateQuiz, \"WPchIFBQzipihJYxCTzOwf/dumk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateQuiz;\nexport default CreateQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuiz\");","map":{"version":3,"sources":["/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js"],"names":["useContext","useState","useNavigate","axios","Context","data","CreateQuiz","triviaData","setTriviaData","player","setPlayer","players","addPlayers","error","setError","navigate","submitForm","event","preventDefault","state","console","log","handleChange","value","target","handleStart","length"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACnB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCR,UAAU,CAACI,OAAD,CAAhD;AACA;AACH;AACA;AACA;;AACG,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEG,WAASc,UAAT,CAAoBC,KAApB,EAA2B;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,UAAU,CAACO,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWV,MAAX,CAAV,CAAV;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAD,IAAAA,SAAS,CAAC,EAAD,CAAT;AACF;;AAED,WAASY,YAAT,CAAsBL,KAAtB,EAA6B;AAC1B,UAAM;AAAEM,MAAAA;AAAF,QAAYN,KAAK,CAACO,MAAxB;AACAd,IAAAA,SAAS,CAACa,KAAD,CAAT;AACF;;AAED,WAASE,WAAT,GAAuB,CACpB;AACA;AACF;;AAED,sBACG;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAM,QAAA,QAAQ,EAAGT,UAAjB;AAAA,gCACG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,mBAA3C;AAA+D,UAAA,QAAQ,EAAEM,YAAzE;AAAuF,UAAA,SAAS,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAO,UAAA,SAAS,EAAC,qCAAjB;AAAuD,UAAA,IAAI,EAAC,QAA5D;AAAqE,UAAA,KAAK,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAMG;AAAA,kBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,cANH,eAOG;AAAQ,QAAA,OAAO,EAAEY,WAAjB;AAA8B,QAAA,QAAQ,EAAEd,OAAO,CAACe,MAAR,GAAiB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAaF;;GAnDQpB,U;UASWJ,W;;;KATXI,U;AAqDT,eAAeA,UAAf","sourcesContent":["import { useContext, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'\nimport Context from \"../utils/Context\"\nimport data from '../sampleData.json'\n\nfunction CreateQuiz() {\n   const { triviaData, setTriviaData } = useContext(Context)\n   /*\n   const [ amount, setAmount] = useState('')\n   const [category, setCategory] = useState('')\n   const [difficulty, setDifficulty] = useState('')*/\n   const [player, setPlayer] = useState('')\n   const [players, addPlayers] = useState('')\n   const [error, setError] = useState('')\n   const navigate = useNavigate();\n/*\n   async function getTriviaData() {\n      try {\n         const { data } = await axios.get(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`)\n         setTriviaData(data)\n         setError('')\n      } catch (err) {\n         setError(err.response.data.message || err.message)\n      }\n   }*/\n\n   function submitForm(event) {\n      event.preventDefault()\n      addPlayers(state => [...state, player])\n      console.log(players)\n      setPlayer('')\n   }\n\n   function handleChange(event) {\n      const { value } = event.target\n      setPlayer(value)\n   }\n\n   function handleStart() {\n      //getTriviaData()\n      //navigate(\"/questions_page\");\n   }\n\n   return (\n      <div className=\"w3-content w3-container w3-margin-top\">\n         <div className=\"w3-card-4 w3-container w3-pale-blue\">\n            <h1>Create quiz - minimum 2 players</h1>\n            <form onSubmit={ submitForm }>\n               <input type=\"text\" name=\"name\" placeholder=\"Enter player name\" onChange={handleChange} className='w3-margin-right'/>\n               <input className=\"w3-button w3-purple w3-round-xlarge\" type=\"submit\" value=\"Submit\" />\n            </form>\n            <h3>{error}</h3>\n            <button onClick={handleStart} disabled={players.length < 1}>Start Quiz</button>\n         </div>\n      </div>\n   )\n}\n\nexport default CreateQuiz;"]},"metadata":{},"sourceType":"module"}