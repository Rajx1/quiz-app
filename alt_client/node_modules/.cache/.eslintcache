[{"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/index.js":"1","/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/App.js":"2","/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/pages/RepoPage.js":"3","/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/utils/Context.js":"4","/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/pages/SearchRepo.js":"5","/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/components/RepoList.js":"6","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/index.js":"7","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/App.js":"8","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Questions.js":"9","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js":"10","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/utils/Context.js":"11","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/ResultsPage.js":"12","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Welcome.js":"13","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Leaderboard.js":"14"},{"size":711,"mtime":1641999627017,"results":"15","hashOfConfig":"16"},{"size":560,"mtime":1642066202603,"results":"17","hashOfConfig":"16"},{"size":862,"mtime":1642066850110,"results":"18","hashOfConfig":"16"},{"size":89,"mtime":1641987479833,"results":"19","hashOfConfig":"16"},{"size":1280,"mtime":1642066793621,"results":"20","hashOfConfig":"16"},{"size":956,"mtime":1642066361101,"results":"21","hashOfConfig":"16"},{"size":971,"mtime":1642542637638,"results":"22","hashOfConfig":"23"},{"size":564,"mtime":1642447340136,"results":"24","hashOfConfig":"23"},{"size":3602,"mtime":1642542009998,"results":"25","hashOfConfig":"23"},{"size":4513,"mtime":1642547278475,"results":"26","hashOfConfig":"23"},{"size":89,"mtime":1641987479833,"results":"27","hashOfConfig":"23"},{"size":1705,"mtime":1642547588415,"results":"28","hashOfConfig":"23"},{"size":401,"mtime":1642543844459,"results":"29","hashOfConfig":"23"},{"size":1772,"mtime":1642584738678,"results":"30","hashOfConfig":"23"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"l4xliq",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"eimp17",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/index.js",["67"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport SearchRepo from './pages/SearchRepo';\nimport RepoPage from './pages/RepoPage';\n\nReactDOM.render(\n   <React.StrictMode>\n      <BrowserRouter>\n         <Routes>\n            <Route path=\"/\" element={<App />}>\n               <Route index element={<SearchRepo />}/>\n               <Route path=\"/repo_page\" element={<RepoPage />}>\n                  <Route path=\":name\" element={<RepoPage />} />\n               </Route>\n            </Route>\n         </Routes>\n      </BrowserRouter>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n",["68","69"],"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/App.js",[],["70","71"],"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/pages/RepoPage.js",[],"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/utils/Context.js",[],"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/pages/SearchRepo.js",[],["72","73"],"/Users/raj/Documents/futureproof/lap 3/github-repo-app/src/components/RepoList.js",[],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/index.js",["74"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport Welcome from './pages/Welcome'\nimport CreateQuiz from './pages/CreateQuiz'\nimport Questions from './pages/Questions'\nimport ResultsPage from './pages/ResultsPage'\nimport Leaderboard from './pages/Leaderboard'\n\nReactDOM.render(\n   <React.StrictMode>\n      <BrowserRouter>\n         <Routes>\n            <Route path=\"/\" element={<App />}>\n               <Route index element={< Welcome/>}/>\n               <Route path=\"/create_quiz\" element={<CreateQuiz />} />\n               <Route path=\"/questions_page\" element={<Questions />} />\n               <Route path=\"/results_page\" element={<ResultsPage />} />\n               <Route path=\"/leaderboard\" element={<Leaderboard />} />\n            </Route>\n         </Routes>\n      </BrowserRouter>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n",["75","76"],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/App.js",[],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Questions.js",["77","78","79","80"],"import { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Context from \"../utils/Context\"\n\nfunction QuestionsPage() {\n   const { triviaData, setTriviaData } = useContext(Context)\n   const navigate = useNavigate()\n   const [questionIndex, setQuestionIndex] = useState(0)\n   const [selected, setSelected] = useState('')\n   const [score, setScore] = useState(0)\n   const [counter, setCounter] = useState(10);\n   const [options, setOptions] = useState(initOptions())\n   \n\n   function initOptions() {\n      if(triviaData) {\n         const data = triviaData.questions[questionIndex]\n         const opts = [...data.incorrect_answers, data.correct_answer]\n         return (opts.sort(() => Math.random() - 0.5))\n      }\n   }\n\n   useEffect(() => {\n      if(!triviaData)\n         navigate('/')\n   }, [])\n\n   useEffect(() => {\n      let timer\n      let delay\n\n      function next() {\n         delay = setTimeout(() => questionIndex === triviaData.questions.length - 1 ? navigate('/results_page') : setQuestionIndex(state => state + 1), 2000)\n      }\n\n      if (counter > 0) {\n        timer = setTimeout(() => setCounter(c => c - 1), 1000)\n      } else {\n         setSelected('unanswered')\n         next()\n      }\n\n      if(selected && timer) {\n         clearTimeout(timer)\n         next()\n      }\n\n      return () => {\n         if (timer) {\n            clearTimeout(timer);\n         }\n         if (delay)\n            clearTimeout(delay)\n      }\n    }, [counter, selected]);\n\n   useEffect(() => {\n      if(selected) {\n         const data = triviaData.questions[questionIndex]\n         const scores = { ...triviaData.scores }\n         const score  = selected === data.correct_answer ? 1 : 0\n         scores[data.player.name] += score\n         setScore(state => state + score)\n         setTriviaData({ ...triviaData, scores})\n      }\n         \n   }, [selected])\n\n   useEffect(() => {\n      if(triviaData) {\n         setOptions(initOptions())\n         setScore(triviaData.scores[triviaData.questions[questionIndex].player.name])\n         setCounter(10)\n         setSelected('')\n      }\n   }, [questionIndex])\n\n   function Question() {\n      \n      function handleCheck(e) {\n         const { value } = e.target\n         setSelected(value)\n      }\n\n      const getButtonColour = value => {\n         let colour = \"w3-light-grey\"\n         if(selected) {\n            if(value === selected)\n               value === triviaData.questions[questionIndex].correct_answer ? colour = \"w3-green\" : colour = \"w3-red\"\n            else if(value === triviaData.questions[questionIndex].correct_answer)\n                  colour = \"w3-green\"\n         }\n         return colour\n      }\n\n      return(\n         <div className=\"w3-card-4 w3-container\">\n            <h1>Question for { triviaData.questions[questionIndex].player.name } </h1>\n            <h2>{ triviaData.questions[questionIndex].player.questionNo} of { triviaData.amount }</h2>\n            <h3>{triviaData.questions[questionIndex].question}</h3>\n               { options.map((e, i) => <button key={`option${i}`} className={\"w3-button w3-margin \" + getButtonColour(e)} value={e} onClick={ handleCheck } disabled={selected}>{ e }</button>) }\n         </div>\n      )\n   }\n\n   return (\n      <div className=\"w3-content w3-container w3-margin-top\">\n         { triviaData &&\n            <div>\n               <div>\n                  <h2>Score: {score}</h2>\n                  <h3>Timer: {counter}</h3>\n               </div>\n               <Question />\n            </div>\n         }\n      </div>\n   )\n}\n\nexport default QuestionsPage;","/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/CreateQuiz.js",[],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/utils/Context.js",[],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/ResultsPage.js",["81"],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Welcome.js",[],"/Users/raj/Documents/futureproof/lap 3/quiz-app/alt_client/src/pages/Leaderboard.js",["82"],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Leaderboard() {\n   const [info, setInfo] = useState('')\n   const [scoresList, setScoresList] = useState([])\n   const [filteredList, setFilteredList] = useState('')\n   const [difficulty, setDifficulty] = useState('all')\n\n   useEffect(() => {\n      async function getScores() {\n         try {\n            const { data } = await axios.get('https://quiz-app-lap3.herokuapp.com/users')\n            data.entries.sort((a, b) => getTotalScore(b) - getTotalScore(a))\n            setScoresList(data.entries)\n            setInfo('')\n         } catch(err) {\n            setInfo(`There has been an issue ${err.message}`)\n         }\n      }\n\n      getScores()\n   }, [])\n\n   useEffect(() => {\n      if(difficulty !== 'all')\n         setFilteredList(difficulty)\n      else\n         setFilteredList('')\n   }, [difficulty])\n\n   function getTotalScore(entry) {\n      delete entry._id\n      let total = 0\n      for(const key in entry)\n         if(key !== 'name')\n            total += entry[key]\n      return total\n   }\n\n   const handleInput = e => {\n      setDifficulty(e.target.value)\n   }\n/*\n   function ScoresList(props) {\n\n      return\n   }*/\n\n   return (\n      <div>\n         <h2>{info}</h2>\n         <h1>Leaderboard</h1>\n         <label>Select difficulty</label>\n         <select onChange={handleInput} name=\"difficulty\">\n            <option value='all'>All</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n         </select>\n         <div>\n            { scoresList.map((e, i) => <p key={`player${i}`}>{e.name}: {getTotalScore(e)}</p>) }\n         </div>\n      </div>\n   )\n}\n\nexport default Leaderboard",{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":26,"column":7,"nodeType":"99","endLine":26,"endColumn":9,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":55,"column":8,"nodeType":"99","endLine":55,"endColumn":27,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":67,"column":7,"nodeType":"99","endLine":67,"endColumn":17,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":76,"column":7,"nodeType":"99","endLine":76,"endColumn":22,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"98","line":27,"column":7,"nodeType":"99","endLine":27,"endColumn":9,"suggestions":"107"},{"ruleId":"83","severity":1,"message":"108","line":7,"column":11,"nodeType":"85","messageId":"86","endLine":7,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],["109"],["110"],["109"],["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'triviaData'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'navigate', 'questionIndex', and 'triviaData.questions.length'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'questionIndex', 'setTriviaData', and 'triviaData'. Either include them or remove the dependency array.",["113"],"React Hook useEffect has missing dependencies: 'initOptions' and 'triviaData'. Either include them or remove the dependency array.",["114"],["115"],"'filteredList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"116","fix":"124"},"Update the dependencies array to be: [navigate, triviaData]",{"range":"125","text":"126"},"Update the dependencies array to be: [counter, navigate, questionIndex, selected, triviaData.questions.length]",{"range":"127","text":"128"},"Update the dependencies array to be: [questionIndex, selected, setTriviaData, triviaData]",{"range":"129","text":"130"},"Update the dependencies array to be: [initOptions, questionIndex, triviaData]",{"range":"131","text":"132"},{"range":"133","text":"126"},[841,843],"[navigate, triviaData]",[1492,1511],"[counter, navigate, questionIndex, selected, triviaData.questions.length]",[1887,1897],"[questionIndex, selected, setTriviaData, triviaData]",[2128,2143],"[initOptions, questionIndex, triviaData]",[783,785]]